game

*start
if PONSCRIPTER = 0 skip 1
h_mapfont 0, "default.ttf"

!s0
textspeed 0
;setwindow 300,800,32,3,36,20,0,2,20,1,1,#999999,0,0,1919,1079
setwindow 100,100,60,3,18,20,0,2,20,1,1,#999999,0,0,1919,1079 ; for debug

mov %sp, 0 ; initialize stack pointer
mov %psp, 0
goto *snr_script_start
;goto *l_scenario_start ; jump to where the script actually starts

*restore_params ; Restore parameters saved to the pstack
;^beforeret^%psp^,^?param_stack[%psp]^/
mov %i5, ?param_stack[%psp]:dec %psp
;^inret^%psp^,^%i5^,^?param_stack[%psp]^/
tablegoto %i5, *rp0, *rp1, *rp2, *rp3, *rp4, *rp5, *rp6, *rp7, *rp8, *rp9, *rpa, *rpb, *rpc, *rpd, *rpe, *rp10
*rp10:mov %pxf, ?param_stack[%psp]:dec %psp:goto *rpf ; Somehow these GOTOs are necessary,
*rpf :mov %pxe, ?param_stack[%psp]:dec %psp:goto *rpe ; otherwise it will repeat the last label
*rpe :mov %pxd, ?param_stack[%psp]:dec %psp:goto *rpd ; for whatever reason. (Ponscripter bug?)
*rpd :mov %pxc, ?param_stack[%psp]:dec %psp:goto *rpc ; This took me many hours of debugging...
*rpc :mov %pxb, ?param_stack[%psp]:dec %psp:goto *rpb
*rpb :mov %pxa, ?param_stack[%psp]:dec %psp:goto *rpa
*rpa :mov %px9, ?param_stack[%psp]:dec %psp:goto *rp9
*rp9 :mov %px8, ?param_stack[%psp]:dec %psp:goto *rp8
*rp8 :mov %px7, ?param_stack[%psp]:dec %psp:goto *rp7
*rp7 :mov %px6, ?param_stack[%psp]:dec %psp:goto *rp6
*rp6 :mov %px5, ?param_stack[%psp]:dec %psp:goto *rp5
*rp5 :mov %px4, ?param_stack[%psp]:dec %psp:goto *rp4
*rp4 :mov %px3, ?param_stack[%psp]:dec %psp:goto *rp3
*rp3 :mov %px2, ?param_stack[%psp]:dec %psp:goto *rp2
*rp2 :mov %px1, ?param_stack[%psp]:dec %psp:goto *rp1
*rp1 :mov %px0, ?param_stack[%psp]:dec %psp:goto *rp0
*rp0
;^afterret^%psp^,^%i5^,^?param_stack[%psp]^/
return

; Converts a number (parameter 2) to a string and left-pads it with zeroes until
; it is the given length (parameter 3) of characters long.
*itoa_pad
getparam s%i5, %i6, %i7
itoa $%i5, %i6
*itoa_pad_lengthen
len %i6, $%i5
if %i6 >= %i7 goto *itoa_pad_return
mov $%i5, "0" + $%i5
goto *itoa_pad_lengthen
*itoa_pad_return
return

*ff_bupload
getparam %ichar, %ibup_cat, %ibup_expr
return

*ff_bupclear
getparam %ichar
return
